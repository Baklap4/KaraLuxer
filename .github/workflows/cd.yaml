name: CI/CD

on: [push, workflow_dispatch]

env:
  PYTHON_MAJOR_VERSION: '3.11'
  PYTHON_VERSION: '3.11.9'

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg

      - uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install dependencies
        run: |
          (gc requirements.txt) -replace 'PyQt5-Qt5==5.15.2', 'PyQt5' | Out-File -encoding UTF8 requirements.txt
          python -m pip install -r requirements.txt

      - name: Create bundle
        run: |
          echo "${{steps.setup-ffmpeg.outputs.ffmpeg-path}}"
          echo "should have been displayed above"
          
          $enc = [System.Text.Encoding]::UTF8
          $bytes = $enc.GetBytes("${{steps.setup-ffmpeg.outputs.ffmpeg-path}}")
          $txt = $enc.GetString($bytes)
          echo $txt
          
          echo ((gc kl_gui.spec) -replace 'tools/ffmpeg.exe', "${{steps.setup-ffmpeg.outputs.ffmpeg-path}}")
          
          (gc kl_gui.spec) -replace 'tools/ffmpeg.exe', ('${{steps.setup-ffmpeg.outputs.ffmpeg-path}}' -replace '\\', '/') | Out-File -encoding UTF8 kl_gui.spec
          
          echo "-------"
          echo (gc kl_gui.spec)
          (gc kl_gui.spec) -replace 'tools/', "C:/hostedtoolcache/windows/Python/${{env.PYTHON_VERSION}}/x64/Lib/site-packages/ultrastar_pitch/binaries/" | Out-File -encoding UTF8 kl_gui.spec
          (gc kl_gui.spec) -replace '.venv/', "C:/hostedtoolcache/windows/Python/${{env.PYTHON_VERSION}}/x64/" | Out-File -encoding UTF8 kl_gui.spec
          pyinstaller kl_gui.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: ${{ github.workspace }}\dist\*.exe
          retention-days: 90


  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install ffmpeg
        run: brew install ffmpeg

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install dependencies
        run: |
          FFPATH=$(brew info ffmpeg | python -c "import sys;[sys.stdout.write(line.split()[0]) for line in sys.stdin if '/opt/homebrew' in line]")
          echo $FFPATH
          sudo sed -i '' "s|tools/ffmpeg.exe|$FFPATH/bin/ffmpeg|" kl_gui.spec

          sudo sed -i '' 's|tools/|/Users/runner/hostedtoolcache/Python/${{env.PYTHON_VERSION}}/arm64/lib/python${{env.PYTHON_MAJOR_VERSION}}/site-packages/ultrastar_pitch/binaries/|' kl_gui.spec
          sudo sed -i '' 's|.venv/lib/|/Users/runner/hostedtoolcache/Python/${{env.PYTHON_VERSION}}/arm64/lib/python${{env.PYTHON_MAJOR_VERSION}}/|' kl_gui.spec
          
          sudo sed -i '' 's|PyQt5-Qt5|PyQt5|' requirements.txt
          python -m pip install -r requirements.txt

      - name: Create bundle
        run: pyinstaller kl_gui.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: ${{ github.workspace }}/dist/*
          retention-days: 90

  ubuntu:
    runs-on:   ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install ffmpeg python3-pyqt5

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install dependencies
        run: |
          sudo sed -i 's|tools/ffmpeg.exe|/usr/bin/ffmpeg|' kl_gui.spec
          sudo sed -i 's|tools/|/opt/hostedtoolcache/Python/${{env.PYTHON_VERSION}}/x64/lib/python${{env.PYTHON_MAJOR_VERSION}}/site-packages/ultrastar_pitch/binaries/|' kl_gui.spec
          sudo sed -i 's|.venv/lib/|/opt/hostedtoolcache/Python/${{env.PYTHON_VERSION}}/x64/lib/python${{env.PYTHON_MAJOR_VERSION}}/|' kl_gui.spec
          
          sudo sed -i 's|PyQt5-Qt5|PyQt5|' requirements.txt
          python -m pip install -r requirements.txt

      - name: Create bundle
        run: pyinstaller kl_gui.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu
          path: ${{ github.workspace }}/dist/*
          retention-days: 90
